{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Ui/assets\\Script\\Ui\\BoardView.js"],"names":["signals","SignalMgr","cc","Class","extends","Component","properties","direction","isEnter","initPosition","onLoad","node","position","that","bind","listen","onLeave","getRoot","onEnter","offset","moveLeaveAction","moveTo","x","stopAllActions","runAction","console","info","height","view","getVisibleSize","Math","random","moveEnterAction","v2","start"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAIA,UAAU,IAAIC,mBAAJ,EAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,mBAAW,CADH;AAERC,iBAAQ,CAFA;AAGR;AACAC,sBAAc;AAJN,KAHP;;AAUL;;AAEAC,UAZK,oBAYK;AACN,aAAKD,YAAL,GAAoB,KAAKE,IAAL,CAAUC,QAA9B;AACA,YAAIC,OAAO,IAAX;;AAER;;;AAGQb,gBAAQc,IAAR,CAAa,MAAb,EAAqBC,MAArB,CAA4B,YAAY;AACpCC;AACH,SAFD;AAGAhB,gBAAQc,IAAR,CAAa,QAAb,EAAuBC,MAAvB,CAA8B,YAAU;AACpC,gBAAGF,KAAKN,SAAL,KAAmBP,QAAQiB,OAAR,GAAkBV,SAAxC,EAAkD;AAC9CW;AACH,aAFD,MAGI;AACAF;AACH;AACJ,SAPD;;AASA,iBAASA,OAAT,GAAmB;AACf,gBAAGH,KAAKL,OAAR,EAAgB;AACZK,qBAAKL,OAAL,GAAe,KAAf;AACH,aAFD,MAEK;AACD;AACH;AACD,gBAAIW,eAAJ;AACA,gBAAGN,KAAKN,SAAL,KAAmB,CAAtB,EAAwB;AACpBY,yBAAS,GAAT;AACH,aAFD,MAGI;AACAA,yBAAS,CAAC,GAAV;AACH;AACD,gBAAIC,kBAAkBlB,GAAGmB,MAAH,CAAU,GAAV,EAAeR,KAAKF,IAAL,CAAUC,QAAV,CAAmBU,CAAnB,GAAuBH,MAAtC,EAA6C,CAA7C,CAAtB;AACAN,iBAAKF,IAAL,CAAUY,cAAV;AACAV,iBAAKF,IAAL,CAAUa,SAAV,CAAoBJ,eAApB;AACAK,oBAAQC,IAAR,CAAa,YAAb;AACH;;AAED,iBAASR,OAAT,GAAmB;AACf,gBAAG,CAACL,KAAKL,OAAT,EAAiB;AACbK,qBAAKL,OAAL,GAAe,IAAf;AACH,aAFD,MAEK;AACD;AACH;AACD,gBAAIW,eAAJ;AACA,gBAAGN,KAAKN,SAAL,KAAmB,CAAtB,EAAwB;AACpBY,yBAAS,GAAT;AACH,aAFD,MAGI;AACAA,yBAAS,CAAC,GAAV;AACH;AACD,gBAAIQ,SAAS,MAAMzB,GAAG0B,IAAH,CAAQC,cAAR,GAAyBF,MAA/B,IAAyC,CAAC,GAAD,GAAKG,KAAKC,MAAL,EAA9C,CAAb;AACA,gBAAIC,kBAAkB9B,GAAGmB,MAAH,CAAU,GAAV,EAAenB,GAAG+B,EAAH,CAAMpB,KAAKF,IAAL,CAAUC,QAAV,CAAmBU,CAAnB,GAAuBH,MAA7B,EAAqCQ,MAArC,CAAf,CAAtB;AACAd,iBAAKF,IAAL,CAAUY,cAAV;AACAV,iBAAKF,IAAL,CAAUa,SAAV,CAAoBQ,eAApB;AACAP,oBAAQC,IAAR,CAAa,eAAeC,MAA5B;AACH;AACJ,KArEI;AAuELO,SAvEK,mBAuEI,CAER;AAzEI;;AA2EL;AA3EJ","file":"BoardView.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Ui","sourcesContent":["import SignalMgr from \"../Signal/SignalMgr\";\r\nvar signals = new SignalMgr();\r\n// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        direction: 0,\r\n        isEnter:0,\r\n        //初始位置\r\n        initPosition: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.initPosition = this.node.position;\r\n        var that = this;\r\n\r\n/*         signals.bind(\"start\").listen(function () {\r\n            onEnter();\r\n        }); */\r\n        signals.bind(\"over\").listen(function () {\r\n            onLeave();\r\n        });\r\n        signals.bind(\"switch\").listen(function(){\r\n            if(that.direction === signals.getRoot().direction){\r\n                onEnter();\r\n            }\r\n            else{\r\n                onLeave();\r\n            }\r\n        })\r\n\r\n        function onLeave() {\r\n            if(that.isEnter){\r\n                that.isEnter = false\r\n            }else{\r\n                return;\r\n            }\r\n            let offset;\r\n            if(that.direction === 0){\r\n                offset = 200;\r\n            }\r\n            else{\r\n                offset = -200;\r\n            }\r\n            let moveLeaveAction = cc.moveTo(0.5, that.node.position.x - offset,0);\r\n            that.node.stopAllActions();\r\n            that.node.runAction(moveLeaveAction);\r\n            console.info(\"[on leave]\");\r\n        }\r\n\r\n        function onEnter() {\r\n            if(!that.isEnter){\r\n                that.isEnter = true\r\n            }else{\r\n                return;\r\n            }\r\n            let offset;\r\n            if(that.direction === 0){\r\n                offset = 200;\r\n            }\r\n            else{\r\n                offset = -200;\r\n            }\r\n            var height = 0.5 * cc.view.getVisibleSize().height * (-0.5+Math.random());\r\n            let moveEnterAction = cc.moveTo(0.5, cc.v2(that.node.position.x + offset, height));\r\n            that.node.stopAllActions();\r\n            that.node.runAction(moveEnterAction);\r\n            console.info(\"[on enter]\" + height);\r\n        }\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}