{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Root/assets\\Script\\Root\\MainRoot.js"],"names":["signals","SignalMgr","cc","Class","extends","Component","properties","nodeMap","Map","pm","direction","onLoad","setRoot","bind","to","StartCmd","director","getPhysicsManager","enabled","console","info","start"],"mappings":";;;;;;AACA;;;;AACA;;;;;;AAFA;AAIA,IAAIA,UAAU,IAAIC,mBAAJ,EAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,iBAAU,IAAIC,GAAJ,EAFF;AAGRC,YAAK,IAHG;AAIRC,mBAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBQ,KAHP;;AAyBL;;AAEAC,UA3BK,oBA2BK;AACN;AACA;AACAX,gBAAQY,OAAR,CAAgB,IAAhB;AACA;AACAZ,gBAAQa,IAAR,CAAa,OAAb,EAAsBC,EAAtB,CAAyBC,kBAAzB;AACA;AACA,aAAKN,EAAL,GAAUP,GAAGc,QAAH,CAAYC,iBAAZ,EAAV;AACA,aAAKR,EAAL,CAAQS,OAAR,GAAkB,IAAlB;AACAC,gBAAQC,IAAR,CAAa,SAAO,KAAKX,EAAzB;AACA,aAAKA,EAAL,CAAQS,OAAR,GAAkB,KAAlB;AACH,KAtCI;AAwCLG,SAxCK,mBAwCI,CAER;AA1CI;;AA4CL;AA5CJ","file":"MainRoot.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Root","sourcesContent":["//获取信号管理器\r\nimport SignalMgr from \"../Signal/SignalMgr\";\r\nimport StartCmd from \"../Command/StartCmd\";\r\n\r\nvar signals = new SignalMgr();\r\n// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //节点映射\r\n        nodeMap : new Map(),\r\n        pm : null,\r\n        direction : 0,\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        //cc.view.enableAutoFullScreen(true);\r\n        //设定根节点\r\n        signals.setRoot(this);\r\n        //绑定启动信号\r\n        signals.bind(\"start\").to(StartCmd);\r\n        //物理管理\r\n        this.pm = cc.director.getPhysicsManager();\r\n        this.pm.enabled = true;\r\n        console.info(\"[物理]\"+this.pm);\r\n        this.pm.enabled = false;\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}