{"version":3,"sources":["SignalMgr.js"],"names":["instance","MainSignalMgr","root","setRoot","node","getRoot","dic","Map","bind","signal","has","get","console","info","s","Signal","set","dispose","args","i","arguments","length","push"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;AAEA,IAAIA,QAAJ;AACA;;IACqBC,gBACjB,yBAAc;AAAA;;AACV;AACA,QAAID,QAAJ,EACI,OAAOA,QAAP;;AAEJA,eAAW,IAAX;;AAEA;AACA,QAAIE,OAAO,IAAX;AACA,SAAKC,OAAL,GAAe,UAAUC,IAAV,EAAgB;AAC3BF,eAAOE,IAAP;AACH,KAFD;AAGA,SAAKC,OAAL,GAAe,YAAY;AACvB,eAAOH,IAAP;AACH,KAFD;AAGA;AACA,QAAII,MAAM,IAAIC,GAAJ,EAAV;AACA;AACA,SAAKC,IAAL,GAAY,UAAUC,MAAV,EAAkB;AAC1B,YAAIH,IAAII,GAAJ,CAAQD,MAAR,CAAJ,EAAqB;AACjB,mBAAOH,IAAIK,GAAJ,CAAQF,MAAR,CAAP;AACH,SAFD,MAEO;AACHG,oBAAQC,IAAR,CAAa,gBAAc,KAAKR,OAAL,EAA3B;AACA,gBAAIS,IAAI,IAAIC,gBAAJ,CAAW,KAAKV,OAAL,EAAX,CAAR;AACAC,gBAAIU,GAAJ,CAAQP,MAAR,EAAgBK,CAAhB;AACA,mBAAOA,CAAP;AACH;AACJ,KATD;AAUA;AACA,SAAKG,OAAL,GAAe,UAAUR,MAAV,EAAkB;AAC7B,YAAIS,OAAO,EAAX;AACA,aAAI,IAAIC,IAAI,CAAZ,EAAcA,IAAEC,UAAUC,MAA1B,EAAiCF,GAAjC,EAAqC;AACjCD,iBAAKI,IAAL,CAAUF,UAAUD,CAAV,CAAV;AACH;AACD,YAAIb,IAAII,GAAJ,CAAQD,MAAR,CAAJ,EAAqB;AACjBH,gBAAIK,GAAJ,CAAQF,MAAR,EAAgBQ,OAAhB,CAAwBC,IAAxB;AACH;AACJ,KARD;AASH;;kBAvCgBjB","file":"SignalMgr.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Signal","sourcesContent":["import Signal from \"./Signal\";\r\n\r\nvar instance;\r\n//信号管理器\r\nexport default class MainSignalMgr {\r\n    constructor() {\r\n        //维持一个单例\r\n        if (instance)\r\n            return instance\r\n\r\n        instance = this\r\n\r\n        //保持一个root节点\r\n        var root = null;\r\n        this.setRoot = function (node) {\r\n            root = node;\r\n        }\r\n        this.getRoot = function () {\r\n            return root;\r\n        }\r\n        //维护一个信号指令映射表\r\n        var dic = new Map();\r\n        // 绑定函数\r\n        this.bind = function (signal) {\r\n            if (dic.has(signal)) {\r\n                return dic.get(signal);\r\n            } else {\r\n                console.info(\"[root is 2]\"+this.getRoot());\r\n                var s = new Signal(this.getRoot());\r\n                dic.set(signal, s);\r\n                return s;\r\n            }\r\n        };\r\n        //查找是否存在对应的信号并执行绑定的指令\r\n        this.dispose = function (signal) {\r\n            var args = [];\r\n            for(var i = 1;i<arguments.length;i++){\r\n                args.push(arguments[i]);\r\n            }\r\n            if (dic.has(signal)) {\r\n                dic.get(signal).dispose(args);\r\n            }\r\n        };\r\n    }\r\n}"]}